this.min2d = this.min2d || {}, function () {
    var a = function (a, b) {
        this.initialize(a, b)
    }, b = a.prototype;
    b.interval = 16, b.onFrame = null, b.paused = !1, b._stop = !1, b.initialize = function (a, b) {
        if (0 >= a || !b) throw"err";
        this.interval = Math.floor(1e3 / a), this.onFrame = b
    }, window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame, b.start = function () {
        var a = Date.now(), b = Date.now(), c = this, d = function () {
            if (c.paused) return void (c._stop = !0);
            var e = Date.now(), f = e - a, g = e - b;
            window.requestAnimationFrame ? (requestAnimationFrame(d), f > c.interval && (a = e - f % c.interval, b = e, c.onFrame(g))) : (setTimeout(d, c.interval), a = e, c.onFrame(f))
        };
        d()
    }, b.pause = function () {
        this.paused = !0
    }, b.resume = function () {
        this.paused && (this.paused = !1, this._stop && (this._stop = !1, this.start()))
    }, min2d.Timer = a
}(), min2d.indexOf = function (a, b) {
    for (var c = 0, d = a.length; d > c; c++) if (b === a[c]) return c;
    return -1
}, function () {
    function a(a, d, e) {
        c(d, !1, function (c) {
            if ("object" == typeof a) b(a, c), e(); else {
                var d = new XMLHttpRequest;
                d.open("GET", a, !0), d.onreadystatechange = function () {
                    4 == d.readyState && 200 == d.status && (b(JSON.parse(d.responseText), c), e())
                }, d.send()
            }
        })
    }

    function b(a, b) {
        var c = a.frames;
        for (var e in c) d[e] = {img: b, rect: c[e].frame}
    }

    function c(a, b, c) {
        var e = document.createElement("img");
        if (e.onload = function () {
            c(e)
        }, e.crossOrigin = "Anonymous", e.src = a, b) {
            var f = a.split("/");
            f = f[f.length - 1], d[f] = e
        }
    }

    var d = min2d._cache = {};
    min2d.preload = function (b, d) {
        var e = b.img, f = b.spritesheet, g = 0;
        e && (g += e.length), f && (g += f.length);
        var h = 0, i = function () {
            h++, h == g && d()
        };
        if (f) for (var j = 0; j < f.length; j++) {
            var k = f[j];
            a(k.json, k.img, i)
        }
        if (e) for (var j = 0; j < e.length; j++) c(e[j], !0, i)
    }
}(), function () {
    var a = function (a, b, c, d, e, f) {
        this.initialize(a, b, c, d, e, f)
    }, b = a.prototype;
    a.identity = null, a.DEG_TO_RAD = Math.PI / 180, b.a = 1, b.b = 0, b.c = 0, b.d = 1, b.tx = 0, b.ty = 0, b.alpha = 1, b.shadow = null, b.compositeOperation = null, b.visible = !0, b.initialize = function (a, b, c, d, e, f) {
        return this.a = null == a ? 1 : a, this.b = b || 0, this.c = c || 0, this.d = null == d ? 1 : d, this.tx = e || 0, this.ty = f || 0, this
    }, b.append = function (a, b, c, d, e, f) {
        var g = this.a, h = this.b, i = this.c, j = this.d;
        return this.a = a * g + b * i, this.b = a * h + b * j, this.c = c * g + d * i, this.d = c * h + d * j, this.tx = e * g + f * i + this.tx, this.ty = e * h + f * j + this.ty, this
    }, b.appendTransform = function (b, c, d, e, f, g, h, i, j) {
        if (f % 360) var k = f * a.DEG_TO_RAD, l = Math.cos(k), m = Math.sin(k); else l = 1, m = 0;
        return g || h ? (g *= a.DEG_TO_RAD, h *= a.DEG_TO_RAD, this.append(Math.cos(h), Math.sin(h), -Math.sin(g), Math.cos(g), b, c), this.append(l * d, m * d, -m * e, l * e, 0, 0)) : this.append(l * d, m * d, -m * e, l * e, b, c), (i || j) && (this.tx -= i * this.a + j * this.c, this.ty -= i * this.b + j * this.d), this
    }, b.identity = function () {
        return this.alpha = this.a = this.d = 1, this.b = this.c = this.tx = this.ty = 0, this.shadow = this.compositeOperation = null, this.visible = !0, this
    }, b.reinitialize = function (a, b, c, d, e, f, g, h, i, j) {
        return this.initialize(a, b, c, d, e, f), this.alpha = null == g ? 1 : g, this.shadow = h, this.compositeOperation = i, this.visible = null == j ? !0 : j, this
    }, b.copy = function (a) {
        return this.reinitialize(a.a, a.b, a.c, a.d, a.tx, a.ty, a.alpha, a.shadow, a.compositeOperation, a.visible)
    }, b.appendProperties = function (a, b, c, d) {
        return this.alpha *= a, this.shadow = b || this.shadow, this.compositeOperation = c || this.compositeOperation, this.visible = this.visible && d, this
    }, b.clone = function () {
        return (new a).copy(this)
    }, a.identity = new a, min2d.Matrix2D = a
}(), function () {
    var a = function () {
        this.initialize()
    }, b = a.prototype;
    b.alpha = 1, b.name = null, b.parent = null, b.regX = 0, b.regY = 0, b.rotation = 0, b.scaleX = 1, b.scaleY = 1, b.skewX = 0, b.skewY = 0, b.shadow = null, b.visible = !0, b.x = 0, b.y = 0, b.compositeOperation = null, b.matrix = null, b.onFrame = null, b.initialize = function () {
        this.matrix = new min2d.Matrix2D
    }, b.isVisible = function () {
        return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY)
    }, b.update = function () {
    }, b.setTransform = function (a, b, c, d, e, f, g, h, i) {
        this.x = a || 0, this.y = b || 0, this.scaleX = 0 == c || c ? c : 1, this.scaleY = 0 == d || d ? d : 1, this.rotation = e || 0, this.skewX = f || 0, this.skewY = g || 0, this.regX = h || 0, this.regY = i || 0
    }, min2d.DisplayObject = a
}(), function () {
    var a = function () {
        this.initialize()
    }, b = a.prototype = new min2d.DisplayObject;
    b.children = null, b.DisplayObject_initialize = b.initialize, b.initialize = function () {
        this.DisplayObject_initialize(), this.children = []
    }, b._onFrame = function (a) {
        for (var b = this.children, c = 0; c < b.length; c++) b[c]._onFrame && b[c]._onFrame(a), b[c].onFrame && b[c].onFrame(a)
    }, b.addChild = function (a) {
        this.addChildAt(a, this.children.length)
    }, b.addChildAt = function (a, b) {
        0 > b || b > this.children.length || null == a || (a.parent && a.parent.removeChild(a), a.parent = this, this.children.splice(b, 0, a))
    }, b.removeChild = function (a) {
        return this.removeChildAt(min2d.indexOf(this.children, a))
    }, b.removeChildAt = function (a) {
        if (!(0 > a || a > this.children.length - 1)) {
            var b = this.children[a];
            b && (b.parent = null), this.children.splice(a, 1)
        }
    }, b.removeAllChildren = function () {
        for (var a = this.children; a.length;) a.pop().parent = null
    }, b.getChildAt = function (a) {
        return this.children[a]
    }, b.getChildByName = function (a) {
        for (var b = this.children, c = 0, d = b.length; d > c; c++) if (b[c].name == a) return b[c];
        return null
    }, b.getChildIndex = function (a) {
        return min2d.indexOf(this.children, a)
    }, min2d.Container = a
}(), function () {
    var a = function (a, b) {
        this.initialize(a, b)
    }, b = a.prototype = new min2d.DisplayObject;
    b.image = null, b.rect = null, b.DisplayObject_initialize = b.initialize, b.initialize = function (a, b) {
        this.DisplayObject_initialize();
        var c = this;
        if ("string" == typeof a) c._setImage(a); else {
            var d = 0, e = a;
            c._setImage(e[0]);
            var f = new min2d.Timer(b, function () {
                d = (d + 1) % e.length, c._setImage(e[d])
            });
            f.start()
        }
    }, b._setImage = function (a) {
        var b = this, c = b.image = min2d._cache[a];
        c.rect && (b.rect = c.rect, b.image = c.img)
    }, b.isVisible = function () {
        return !!(this.visible && this.alpha > 0 && 0 != this.scaleX && 0 != this.scaleY && this.image)
    }, min2d.Sprite = a
}(), function () {
    var a = function (a, b, c) {
        this.initialize(a, b, c)
    }, b = a.prototype = new min2d.Container;
    b.timer = null, b.canvas = null, b.renderMode = 0, b.renderer = null, b.Container_initialize = b.initialize, b.initialize = function (a, b, c) {
        var d = this;
        d.Container_initialize();
        var a = d.canvas = "string" == typeof a ? document.getElementById(a) : a;
        c && 1 != c || min2d.WebGLRenderer && (d.renderer = new min2d.WebGLRenderer(a), d.renderer.ctx && (d.renderMode = 1)), (0 == d.renderMode || 2 == c) && (d.renderer = new min2d.Canvas2dRenderer(a), d.renderMode = 2), d.timer = new min2d.Timer(b, function (a) {
            d._onFrame(a), d.onFrame && d.onFrame(a), d.update()
        }), d.timer.start()
    }, b.update = function () {
        var a = this.renderer;
        a.clear(), a.render(this)
    }, min2d.Stage = a
}(), function () {
    var a = function (a) {
        this.initialize(a)
    }, b = a.prototype;
    b.ctx = null, b.canvasWidth = 0, b.canvasHeight = 0, b.initialize = function (a) {
        this.ctx = a.getContext("2d"), this.canvasWidth = a.width, this.canvasHeight = a.height
    }, b.clear = function () {
        this.ctx.setTransform(1, 0, 0, 1, 0, 0), this.ctx.clearRect(0, 0, this.canvasWidth + 1, this.canvasHeight + 1)
    }, b.render = function (a) {
        var b = this.ctx;
        b.save(), this._draw(a.children, b), b.restore()
    }, b._draw = function (a, b) {
        for (var c = 0; c < a.length; c++) {
            var d = a[c];
            if (d.isVisible()) {
                if (b.save(), this.presetContext(b, d), d.children) this._draw(d.children, b); else if (d instanceof min2d.Sprite) {
                    var e = d.rect;
                    e ? b.drawImage(d.image, e.x, e.y, e.w, e.h, 0, 0, e.w, e.h) : b.drawImage(d.image, 0, 0)
                }
                b.restore()
            }
        }
    }, b.presetContext = function (a, b) {
        var c, d = b;
        c = d.matrix.identity().appendTransform(d.x, d.y, d.scaleX, d.scaleY, d.rotation, d.skewX, d.skewY, d.regX, d.regY);
        var e = Math.round(c.tx), f = Math.round(c.ty);
        a.transform(c.a, c.b, c.c, c.d, e, f), a.globalAlpha *= d.alpha, d.compositeOperation && (a.globalCompositeOperation = d.compositeOperation)
    }, min2d.Canvas2dRenderer = a
}(), function () {
    var a = function (a) {
        this.initialize(a)
    }, b = a.prototype, c = 5, d = 4, e = d * c, f = 6, g = Math.pow(2, 16), h = parseInt(g / f / 32);
    console.log(`g${g},h${h}`)
    b.ctx = null, b._projectionMatrix = null, b._webGLErrorDetected = !1, b._shaderProgram = null, b._vertices = null, b._verticesBuffer = null, b._indices = null, b._indicesBuffer = null, b._currentBoxIndex = -1, b._drawTexture = null, b._maxBoxesPerDraw = null, b.initialize = function (a) {
        var b = {depth: !1, alpha: !0, preserveDrawingBuffer: !1, antialias: !1, premultipliedAlpha: !0},
            c = this.ctx = a.getContext("webgl", b) || a.getContext("experimental-webgl", b);
        if (c) {
            if (this.clear(), c.enable(c.BLEND), c.blendFuncSeparate(c.SRC_ALPHA, c.ONE_MINUS_SRC_ALPHA, c.ONE, c.ONE_MINUS_SRC_ALPHA), c.pixelStorei(c.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !1), this._createShaderProgram(c), this._webGLErrorDetected) return void (this.ctx = null);
            this._createBuffers(c), this._updateViewport(a.width, a.height);
        }
    }, b.clear = function () {
        this.ctx.clearColor(0, 0, 0, 0), this.ctx.clear(this.ctx.COLOR_BUFFER_BIT)
    }, b.render = function (a) {
        this.ctx && (this._draw(a.children, this.ctx), this._drawTexture && this._flush(this.ctx))
    }, b._updateViewport = function (a, b) {
        this.ctx.viewport(0, 0, a, b), this._projectionMatrix = new Float32Array([0, 0, 0, 0, 0, 1, -1, 1, 1]), this._projectionMatrix[0] = 2 / a, this._projectionMatrix[4] = -2 / b
    }, b._draw = function (a, b, c) {
        for (var d, i, j = this, k = 0, l = 0, m = 0, n = 0, o = j._vertices, p = 0, q = a.length; q > p; p++) if (d = a[p], d.isVisible()) {
            i = d.matrix, i = (c ? i.copy(c) : i.identity()).appendTransform(d.x, d.y, d.scaleX, d.scaleY, d.rotation, d.skewX, d.skewY, d.regX, d.regY);
            var r = 0, s = 1, t = 0, u = 1;
            if (d.children) d.children && j._draw(d.children, b, i); else {
                var v = d.rect, w = d.image, x = j._setTexture(j.ctx, w);
                if (!x) continue;
                j._drawTexture !== x && (j._drawTexture && j._flush(b), b.bindTexture(b.TEXTURE_2D, x), j._drawTexture = x), v ? (m = k + v.w, n = l + v.h, r = v.x / w.width, t = v.y / w.height, s = r + v.w / w.width, u = t + v.h / w.height) : (m = k + w.width, n = l + w.height);
                var y = i.a, z = i.b, A = i.c, B = i.d, C = i.tx, D = i.ty, E = ++j._currentBoxIndex * e;
                o[E] = k * y + l * A + C, o[E + 1] = k * z + l * B + D, o[E + 5] = k * y + n * A + C, o[E + 6] = k * z + n * B + D, o[E + 10] = m * y + n * A + C, o[E + 11] = m * z + n * B + D, o[E + 15] = m * y + l * A + C, o[E + 16] = m * z + l * B + D, o[E + 2] = o[E + 7] = r, o[E + 12] = o[E + 17] = s, o[E + 3] = o[E + 18] = t, o[E + 8] = o[E + 13] = u, o[E + 4] = o[E + 9] = o[E + 14] = o[E + 19] = d.alpha, j._currentBoxIndex == j._maxBoxesPerDraw - 1 && (j._flush(b), this._maxBoxesPerDraw < g / f && (this._maxBoxesPerDraw += h, this._setMaxBoxesPoints(b)))
            }
        }
    }, b._createShaderProgram = function (a) {
        var b = this._createShader(a, a.FRAGMENT_SHADER, "precision mediump float;uniform sampler2D uSampler0;varying vec3 vTextureCoord;void main(void) {vec4 color = texture2D(uSampler0, vTextureCoord.st);gl_FragColor = vec4(color.rgb, color.a * vTextureCoord.z);}"),
            c = this._createShader(a, a.VERTEX_SHADER, "attribute vec2 aVertexPosition;attribute vec3 aTextureCoord;uniform mat3 uPMatrix;varying vec3 vTextureCoord;void main(void) {vTextureCoord = aTextureCoord;gl_Position = vec4((uPMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);}");
        if (!this._webGLErrorDetected && b && c) {
            var d = a.createProgram();
            if (a.attachShader(d, b), a.attachShader(d, c), a.linkProgram(d), !a.getProgramParameter(d, a.LINK_STATUS)) return void (this._webGLErrorDetected = !0);
            a.useProgram(d), d.vertexPositionAttribute = a.getAttribLocation(d, "aVertexPosition"), d.textureCoordAttribute = a.getAttribLocation(d, "aTextureCoord");
            var e = a.getUniformLocation(d, "uSampler0");
            a.uniform1i(e, 0), a.enableVertexAttribArray(d.vertexPositionAttribute), a.enableVertexAttribArray(d.textureCoordAttribute), d.pMatrixUniform = a.getUniformLocation(d, "uPMatrix"), this._shaderProgram = d
        }
    }, b._createShader = function (a, b, c) {
        var d = a.createShader(b);
        return a.shaderSource(d, c), a.compileShader(d), a.getShaderParameter(d, a.COMPILE_STATUS) ? d : (this._webGLErrorDetected = !0, null)
    }, b._createBuffers = function (a) {
        this._verticesBuffer = a.createBuffer(), a.bindBuffer(a.ARRAY_BUFFER, this._verticesBuffer);
        var b = 4 * c;
        a.vertexAttribPointer(this._shaderProgram.vertexPositionAttribute, 2, a.FLOAT, a.FALSE, b, 0), a.vertexAttribPointer(this._shaderProgram.textureCoordAttribute, 3, a.FLOAT, a.FALSE, b, 8), this._indicesBuffer = a.createBuffer(), this._maxBoxesPerDraw = h, this._setMaxBoxesPoints(a)
    }, b._setMaxBoxesPoints = function (a) {
        this._vertices = new Float32Array(this._maxBoxesPerDraw * e), a.bufferData(a.ARRAY_BUFFER, this._vertices, a.DYNAMIC_DRAW), this._indices = new Uint16Array(this._maxBoxesPerDraw * f);
        for (var b = 0, c = this._indices.length; c > b; b += f) {
            var g = b * d / f;
            this._indices[b] = g, this._indices[b + 1] = g + 1, this._indices[b + 2] = g + 2, this._indices[b + 3] = g, this._indices[b + 4] = g + 2, this._indices[b + 5] = g + 3
        }
        a.bindBuffer(a.ELEMENT_ARRAY_BUFFER, this._indicesBuffer), a.bufferData(a.ELEMENT_ARRAY_BUFFER, this._indices, a.STATIC_DRAW)
    }, b._setTexture = function (a, b) {
        var c;
        return b && (c = b.__webgl_texture, c || (c = b.__webgl_texture = a.createTexture(), a.bindTexture(a.TEXTURE_2D, c), a.texImage2D(a.TEXTURE_2D, 0, a.RGBA, a.RGBA, a.UNSIGNED_BYTE, b), a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.NEAREST), a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.LINEAR), a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE), a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE))), c
    }, b._flush = function (a) {
        a.bindBuffer(a.ARRAY_BUFFER, this._verticesBuffer), a.bindBuffer(a.ELEMENT_ARRAY_BUFFER, this._indicesBuffer), a.uniformMatrix3fv(this._shaderProgram.pMatrixUniform, !1, this._projectionMatrix);
        var b = this._vertices, c = this._currentBoxIndex + 1;
        32 >= c && (b = b.subarray(0, e * c)), a.bufferData(a.ARRAY_BUFFER, b, a.DYNAMIC_DRAW), a.drawElements(a.TRIANGLES, f * c, a.UNSIGNED_SHORT, 0), this._drawTexture = null, this._currentBoxIndex = -1
    }, min2d.WebGLRenderer = a
}();